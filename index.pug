doctype html
html(lang="en")
	head
		title Paper HN
		meta(charset='utf-8')
		meta(name="viewport" content="initial-scale=1")
		link(rel="preconnect" href="https://fonts.googleapis.com")
		link(rel="preconnect" href="https://fonts.gstatic.com" crossorigin)
		link(href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@700&family=Source+Sans+Pro:ital,wght@0,400;1,400&family=Source+Serif+Pro:wght@400;700&display=swap" rel="stylesheet")
		style.
			body {
				font-family: 'Source Serif Pro', serif;
				background-color: #FAF8F4;
				color: #1A1A1A;
				font-size: 16px;
				line-height: 1.6;
			}
			h1 {
				font-family: 'Playfair Display', serif;
				font-size: 40px;
				text-align: center;
				margin-bottom: 0.5em;
				color: #111;
			}
			h2 {
				font-family: 'Playfair Display', serif;
				font-size: 24px;
				margin: 0 0 0.5em;
				color: #111;
			}
			p {
				margin: 0;
				-webkit-hyphens: auto;
				-moz-hyphens: auto;
				-ms-hyphens: auto;
				-o-hyphens: auto;
				word-break: break-word;
				hyphens: auto;
				text-align: justify;
			}
			a:link, a:visited {
				text-decoration: none;
				color: #1D3557;
			}
			a:link:hover {
				text-decoration: underline;
			}
			header a:link, header a:visited, .imprint a:link, .imprint a:visited {
				color: inherit;
			}
			.mastspan {
				border-top: 1px solid #CCC;
				border-bottom: 1px solid #CCC;
				padding: 0.25em 0.5em;
				display: flex;
				justify-content: space-between;
				font-family: 'Source Sans Pro', sans-serif;
				font-size: 12px;
			}
			progress {
				display: block;
				margin: 2em auto;
				width: 100%;
				max-width: 25em;
			}
			main {
				margin: -2em auto 0;
			}
			.grid-item, .grid-sizer {
				width: 100%;
				max-width: 25em;
				margin: 2em;
			}
			@media screen and (max-width: 58em) {
				.grid-item, .grid-sizer {
					margin: 2em 0;
				}
			}
			main section {
				border-bottom: 1px solid #CCC;
				padding-bottom: 2em;
				margin-bottom: 0 !important;
			}
			main section:nth-child(-n+3) {
				max-width: 54em;
			}
			main section:nth-child(-n+3) h2 {
				font-size: 32px;
			}
			main section:nth-child(n+10) h2 {
				font-size: 22px;
			}
			main section img {
				max-width: 100%;
				filter: grayscale(100%);
				display: block;
				margin: 0 auto 0.5em;
			}
			main section:hover img {
				filter: none;
			}
			main section p {
				margin-top: 0.25em;
			}
			.keyword, .score, code {
				font-family: 'Source Sans Pro', sans-serif;
				font-size: 12px;
				color: #666;
			}
			.keyword {
				font-style: italic;
			}
			.keyword a:link {
				color: #1D3557;
			}
			.score-display {
				font-family: 'Source Sans Pro', sans-serif;
				font-weight: 700;
				font-size: 14px;
				color: #7B2E2E;
				margin-bottom: 0.25em;
			}
			.job {
				margin-top: 1em;
				padding-bottom: 1em;
			}
			.job p {
				font-size: 90%;
			}
			.imprint {
				margin-top: 2em;
			}
			.imprint p {
				border: 1px solid #CCC;
				padding: 0.75em;
				font-size: 14px;
			}
		meta(property='og:url' content='https://www.wolfgangfaust.com/project/paper-hn/')
		meta(property='og:title' content='Paper HN')
		meta(property='og:description' content="Hacker News front page in the style of a print newspaper")
		meta(property='og:image' content='https://www.wolfgangfaust.com/project/paper-hn/screenshot.png')
		meta(name='twitter:card' content='summary_large_image')
		meta(name='twitter:title' content='Paper HN')
		meta(name='twitter:description' content="Hacker News front page in the style of a print newspaper")
		meta(name='twitter:image' content='https://www.wolfgangfaust.com/project/paper-hn/screenshot.png')
	body
		header
			h1: a(href='https://news.ycombinator.com') Hacker News
			.mastspan
				span No. #{Math.max(...stories.map(s => s.id))}
				span #{date} UTC
		.noscript This looks much nicer if you enable JavaScript.
		main
			- let imgcnt = 0
			for story, idx in stories
				section.grid-item
					- if (story.image) imgcnt++
					if story.image
						img(src=story.image)
					div.score-display #{story.score} points
					h2: a(href=story.url)=story.title
					p
						code=story.domain
						!=' &mdash; '
						=story.paragraph
						=' '
						strong.keyword
							a(href='https://news.ycombinator.com/item?id='+story.id)=story.keyword
							| ,&nbsp;#{idx+1}
			for job in jobs
				section.grid-item.job
					p
						a(href=job.url) #[strong=job.title1] #{job.title2}
						=' '
						code=job.domain
			footer.grid-item.imprint
				p.
					A project of #[a(href='https://www.wolfgangfaust.com') Wolfgang Faust].&ensp;
					Open source on GitHub as #[a(href='https://github.com/wolfgang42/paper-hn') wolfgang42/paper-hn].&ensp;
					Data from #[a(href='https://news.ycombinator.com') Hacker News].&ensp;
					Inspired by #[a(href='https://unim.press') The Unim.press].
			.grid-sizer
		script.
			var main = document.querySelector('main')
			document.querySelector('.noscript').remove()
			main.style.display = 'none'
			var progress = document.createElement('progress')
			progress.innerText = 'Loading...'
			document.body.append(progress)
		script(src="https://unpkg.com/imagesloaded@4/imagesloaded.pkgd.min.js")
		script(src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js")
		script.
			if (!window.imagesLoaded || !window.Masonry) {
				// Libraries failed to load somehow
				main.style.display = 'block'
				progress.remove()
			}
			imagesLoaded(main, function() {
				main.style.display = 'block'
				var msnry = new Masonry(main, {
					itemSelector: '.grid-item',
					columnWidth: '.grid-sizer',
					fitWidth: true,
					gutter: 0,
					transitionDuration: 0,
				})
				// Retrigger masonry after window resize
				// I don't quite understand why this is necessary---masonry should be doing this already,
				// and also it doesn't seem to work unless I introduce a considerable delay---but
				// since this works I'm not going to spend any more time messing with it.
				var rsevent = null
				window.addEventListener('resize', function(event){
					if (!rsevent) {
						rsevent = window.setTimeout(function() {
							msnry.layout()
							console.log('resize')
							rsevent = null
						}, 200)
					}
				})
				progress.remove()
			})
		// Matomo
		script(type="text/javascript").
			var _paq = window._paq || [];
			/* tracker methods like "setCustomDimension" should be called before "trackPageView" */
			_paq.push(['trackPageView']);
			_paq.push(['enableLinkTracking']);
			(function() {
				var u="//analytics.linestarve.com/";
				_paq.push(['setTrackerUrl', u+'matomo.php']);
				_paq.push(['setSiteId', '10']);
				var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
				g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
			})();
		noscript: p: img(src="//analytics.linestarve.com/matomo.php?idsite=10&amp;rec=1" style="border:0;" alt="")